version: "3.8"
services:
  s3:
    image: quay.io/minio/minio
    container_name: s3
    volumes:
        - ./buckets:/data:consistent
    expose:
        - "9000"
    ports:
        - "9000:9000"
        - "9001:9001"
    environment:
        - MINIO_ROOT_USER=${MINIO_ROOT_USER}
        - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: minio server /data --console-address ":9001"
    networks: 
        - mlflow
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3
  postgres:
    image: postgres:latest
    container_name: mlflow_postgres
    networks:
        - mlflow
    environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
        - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  mlflow:
    restart: always
    build: .
    image: mlflow-custom
    container_name: mlflow_server
    ports:
        - "5050:5000"
    networks: 
        - mlflow
    environment:
        - MLFLOW_S3_ENDPOINT_URL=http://s3:9000
        - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
        - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: mlflow server --backend-store-uri postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB} --default-artifact-root s3://mlflow/ --host 0.0.0.0
    depends_on:
        - postgres
    
networks:
    mlflow:
volumes:
  pgdata:
